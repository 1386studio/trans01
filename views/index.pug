extends layout

block content
  div(style="position:relative;line-height: 2rem;font-size: 1rem;")
    span= selected.name + ' （' + selected.editor + '）'
    span(style="position:absolute;top:0;right:0;line-height:0")
      a#conflict-edit-btn.layui-btn.layui-btn-normal.layui-btn-sm(href="#") 编辑属性
      a#conflict-edit-btn2.layui-btn.layui-btn-normal.layui-btn-sm(href="#") 编辑简介
      a#alert-add-btn.layui-btn.layui-btn-danger.layui-btn-sm(href="#") 新增新闻
  table#test.layui-hide(lay-filter="demo")
block layer
  form#alert-editor(style="display:none;padding:17px;")
    .layui-form-item
      label.layui-form-label 新闻标题
      .layui-input-block
        input.layui-input(type='text', name='title', autocomplete='off', placeholder='请输入标题')
    .layui-form-item
      label.layui-form-label 来源
      .layui-input-block
        input.layui-input(type='text', name='source', autocomplete='off', placeholder='请输入来源')
    .layui-form-item
      label.layui-form-label 日期
      .layui-input-inline
        input#date.layui-input(type='text', name='datetime', lay-verify='date', placeholder='yyyy-MM-dd HH:mm:ss', autocomplete='off')
    .layui-form-item.layui-form-text
      label.layui-form-label 内容
      .layui-input-block
        textarea#alert-content.layui-textarea(placeholder='请输入内容')
  form#conflict-editor-prop.layui-form(action='', style="display:none;padding:17px;", lay-filter="test1")
    .layui-form-item
      label.layui-form-label 冲突名称
      .layui-input-block
        input.layui-input(type='text', name='name', autocomplete='off', placeholder='请输入名称', value= selected.name)
    .layui-form-item
      label.layui-form-label 相关地区
      .layui-input-block
        select(name='region')
          each v,i in ['亚太','北美','日本']
            option(selected=(v == selected.region ? true : false))= v
    .layui-form-item
      label.layui-form-label 对美国的影响
      .layui-input-block
        select(name='impact_to_us')
          each v,i in ['至关重要','无关紧要','毫无关系']
            option(selected=(v == selected.impact_to_us ? true : false))= v
    .layui-form-item
      label.layui-form-label 对中国的影响
      .layui-input-block
        select(name='impact_to_cn')
          each v,i in ['至关重要','无关紧要','毫无关系']
            option(selected=(v == selected.impact_to_cn ? true : false))= v
    .layui-form-item
      label.layui-form-label 进展状态
      .layui-input-block
        select(name='status')
          each v,i in ['恶化','缓和','积极']
            option(selected=(v == selected.status ? true : false))= v
    .layui-form-item
      label.layui-form-label 冲突类型
      .layui-input-block
        select(name='type')
          each v,i in ['内战','局部战争','政变']
            option(selected=(v == selected.type ? true : false))= v
    .layui-form-item
      label.layui-form-label 相关地图
      .layui-input-block
        input.layui-input(type='text', name='map_url', autocomplete='off', placeholder='请输入地图URL', value= selected.map_url)
  #conflict-editor-intro(style="display:none")
    #conflict-editor-intro-content
  script#barDemo(type='text/html').
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>

block conflict-list
  each v,i in conflicts
    li.layui-nav-item(class=(v._id == selected._id) ? "layui-this" : "")
      a(href= `/conflicts/${v._id}`)= v.name
block script
  script.
    layui.use(['laydate','table','layer'], function(){

      var laydate = layui.laydate;
      laydate.render({
        elem: '#date',
        type: 'datetime'
      });

      var table = layui.table;
      table.render({
        elem: '#test'
        ,url: `/alerts/#{selected._id}`
        ,cellMinWidth: 80
        ,cols: [[
            {field:'_id', width:150, title: 'ID'},
            {field:'title', width:300, title: '标题'},
            {field:'datetime', width:150, title: '日期'},
            {field:'source', width:150, title: '来源'},
            {field:'content', title: '内容'},
            {fixed: 'right', width:120, align:'center', toolbar: '#barDemo', title: '操作'}
        ]]
      });
      table.on('tool(demo)', function(obj){
        var data = obj.data;
        if(obj.event === 'del'){
          layer.confirm('真的删除？', function(index){
            $.ajax({
              type : "DELETE",
              url : `/alerts/${data._id}`,
              success : function(resp) {
                if(resp.success){
                  obj.del();
                  layer.close(index);
                }
              }
            });
          });
        } else if(obj.event === 'edit'){
          var index = layer.open({
            type: 1,
            content: $('#alert-editor'),
            area: ['50rem', '22rem'],
            //- maxmin: true,
            success: function() {
              $('input[name="title"]').val(data.title);
              $('input[name="source"]').val(data.source);
              $('#date').val(data.datetime);
              $('#alert-content').val(data.content)
            },
            cancel: function(){
              var data2 = {
                title: $('input[name="title"]').val(),
                source: $('input[name="source"]').val(),
                datetime: $('#date').val(),
                content: $('#alert-content').val(),
              };
              $.ajax({
                type : "PUT",
                url : `/alerts/${data._id}`,
                data : data2,
                success : function(resp) {
                  if(resp.success){
                    obj.update(data2);
                  }
                }
              });
            }
          });
        }
      });
      $('#alert-add-btn').on('click', function(){
        var index = layer.open({
          type: 1,
          content: $('#alert-editor'),
          area: ['50rem', '19rem'],
          //- maxmin: true,
          success: function() {
            $('input[name="title"]').val(null);
            $('#date').val(null);
            $('#alert-content').val(null)
          },
          cancel: function(){
            var data2 = {
              title: $('input[name="title"]').val(),
              source: $('input[name="source"]').val(),
              datetime: $('#date').val(),
              content: $('#alert-content').val(),
              conflict: '#{selected._id}'
            };
            if(data2.title){
              var loading = layer.load(1, {
                shade: [0.2,'#000'] //0.1透明度的白色背景
              });
              $.ajax({
                type : "POST",
                url : `/alerts`,
                data : data2,
                success : function(resp) {
                  if(resp.success){
                    table.reload('test');
                    layer.close(loading)
                  }
                }
              });
            }
          }
        });
      });
      var layer = layui.layer;
      $('#conflict-edit-btn').on('click', function(){
        var index = layer.open({
          type: 1,
          content: $('#conflict-editor-prop'),
          area: ['50rem', '28rem'],
          //- maxmin: true,
          cancel: function(){
            var loading = layer.load(1, {
              shade: [0.2,'#000'] //0.1透明度的白色背景
            });
            var data = {
              name: $('input[name="name"]').val(),
              region: $('select[name="region"]').find("option:selected").text(),
              impact_to_us: $('select[name="impact_to_us"]').find("option:selected").text(),
              impact_to_cn: $('select[name="impact_to_cn"]').find("option:selected").text(),
              status: $('select[name="status"]').find("option:selected").text(),
              type: $('select[name="type"]').find("option:selected").text(),
              map_url: $('input[name="map_url"]').val(),
            };
            $.ajax({
              type : "PUT",
              url : '/conflicts/#{selected._id}',
              data : data,
              success : function(resp) {
                if(resp.success){
                  location.reload();
                }
              }
            });
          }
        });
        //- layer.full(index);
      });
      $('#conflict-edit-btn2').on('click', function(){
        $("#conflict-editor-intro").append("<div id=\"test-editormd\"></div>");
        var testEditor = {};
        var index = layer.open({
          type: 1,
          content: $('#conflict-editor-intro'),
          area: ['50rem', '395px'],
          //- maxmin: true,
          success: function() {
            testEditor = editormd("test-editormd", {
              width: "100%",
              height: 740,
              path : '/editor.md/lib/',
              //- theme : "light",
              //- previewTheme : "light",
              //- editorTheme : "pastel-on-dark",
              markdown : '#{selected.intro.replace(/\n/g,"\\n").replace(/\'/g,"\\'")}',
              codeFold : true,
              //syncScrolling : false,
              saveHTMLToTextarea : true,    // 保存 HTML 到 Textarea
              searchReplace : true,
              //watch : false,                // 关闭实时预览
              htmlDecode : "style,script,iframe|on*",            // 开启 HTML 标签解析，为了安全性，默认不开启    
              //toolbar  : false,             //关闭工具栏
              //previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启
              emoji : true,
              taskList : true,
              tocm            : true,         // Using [TOCM]
              tex : true,                   // 开启科学公式TeX语言支持，默认关闭
              flowChart : true,             // 开启流程图支持，默认关闭
              sequenceDiagram : true,       // 开启时序/序列图支持，默认关闭,
              //dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true
              //dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true
              //dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true
              //dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1
              //dialogMaskBgColor : "#000", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff
              imageUpload : true,
              imageFormats : ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
              imageUploadURL : "/upload",
              onload : function() {
                this.fullscreen();
              }
            }); 
          },
          cancel: function(){
            var loading = layer.load(1, {
              shade: [0.2,'#000'] //0.1透明度的白色背景
            });
            var data = {intro: testEditor.getMarkdown()}
            $.post('/conflicts/#{selected._id}', data, function(resp){
              location.reload();
            })
            $.ajax({
              type : "PUT",
              url : '/conflicts/#{selected._id}',
              data : data,
              success : function(resp) {
                if(resp.success){
                  testEditor.editor.remove();
                  location.reload();
                }
              }
            });
          }
        });
        layer.full(index);
      });
    });

